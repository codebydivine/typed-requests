[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "divine-requests"
version = "0.1.2"
authors = [
  { name="DIVINE", email="admin@divine.sh" },
]
description = "A type-safe HTTP client library with validation and detailed error reporting."
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "divine-type-enforcer==0.1.3",
    "httpx[http2]>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21",
    "anyio>=4.0.0",
    "trio>=0.20.0",
    "python-dotenv>=1.0.0",
    "pre-commit>=3.5.0",
    "ruff>=0.8.0",
    "mypy>=1.14.0",
]

[project.urls]
Homepage = "https://github.com/codebydivine/requests"
Issues = "https://github.com/codebydivine/requests/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = "--cov=requests --cov-report term-missing -p anyio"
asyncio_mode = "auto"
anyio_backends = ["asyncio", "trio"]

[tool.ruff]
target-version = "py313"
line-length = 120
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_unused_configs = true
ignore_missing_imports = true # Optional: adjust as needed

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["src/requests"]
omit = [
    "src/requests/__init__.py", # Typically excluded
]

[tool.coverage.report]
fail_under = 90 # Example: require 90% coverage
show_missing = true
